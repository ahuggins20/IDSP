isUpset<-ratings[ratings$nameList==as.character(match$loser_name),2]>ratings[ratings$nameList==as.character(match$winner_name),2]
if(isUpset==TRUE){
expWinName<-as.character(match$loser_name)
}else{
expWinName<-as.character(match$winner_name)
}
print(expWinName)
actPctOfExpWin<-as.numeric(as.character(actPct[actPct$name==expWinName,2]))
print(actPctOfExpWin)
diffInPcts<-as.numeric(actPctOfExpWin-expPct)
changeInRatings<-diffInPcts
print(changeInRatings)
return(changeInRatings)
}
View(main(2018))
pctGamesWon<-function(match,ratings){
specScore<-match$score
if(specScore=='W/O'){
pctWon<-calcExpectedPct(as.character(match$winner_name),as.character(match$loser_name),ratings)
names<-rbind(as.character(match$winner_name),(as.character(match$loser_name)))
if(ratings[ratings$nameList==as.character(match$winner_name),2]>ratings[ratings$nameList==as.character(match$loser_name),2]){
pcts<-rbind(pctWon,1-pctWon)
out<-as.data.frame(cbind(names, pcts))
colnames(out)<-c('name','pct')
return(out)
}else{
pcts<-rbind(1-pctWon,pctWon)
out<-as.data.frame(cbind(names, pcts))
colnames(out)<-c('name','pct')
return(out)
}
}
setScores<-strsplit(as.character(specScore),' ')
gamesPerSet<-lapply(setScores, function(i){
strsplit(i,'-')
})
gameScores<-unlist(gamesPerSet, TRUE)
gameScores<-lapply(gameScores, function(i){
substr(i,1,1)
})
gameScores<-suppressWarnings(as.numeric(gameScores))
gameScores<-na.omit(gameScores)
totalPlayed<-sum(gameScores)
gameScores<-cbind(gameScores[c(TRUE, FALSE)],gameScores[c(FALSE, TRUE)])
winnerWon<-sum(gameScores[,1])
loserWon<-sum(gameScores[,2])
names<-rbind(as.character(match$winner_name),(as.character(match$loser_name)))
pcts<-rbind((winnerWon/totalPlayed),(loserWon/totalPlayed))
ratingsOfPs<-rbind(ratings[ratings$nameList==as.character(match$winner_name),2],ratings[ratings$nameList==as.character(match$loser_name),2])
out<-as.data.frame(cbind(names, pcts, ratingsOfPs))
colnames(out)<-c('name','pct', 'rating')
return(out)
}
View(main(2018))
main<-function(startYear){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
ratings<-initAllNames(allMatches)
for(i in 1:30){#nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change
}
return(ratings)
}
View(main(2018))
main<-function(startYear){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
ratings<-initAllNames(allMatches)
for(i in 1:5){#nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change
}
return(ratings)
}
View(main(2018))
main<-function(startYear){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
ratings<-initAllNames(allMatches)
for(i in 1:50){#nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change
}
return(ratings)
}
View(main(2018))
main<-function(startYear){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
ratings<-initAllNames(allMatches)
for(i in 1:nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change
}
return(ratings)
}
View(main(2018))
main<-function(startYear){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
ratings<-initAllNames(allMatches)
for(i in 1:nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]+change
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]-change
}
return(ratings)
}
View(main(2018))
main<-function(startYear){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
ratings<-initAllNames(allMatches)
for(i in 1:nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
if(change[2]){
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]+change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]-change[1]
}else{
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change[1]
}
}
return(ratings)
}
View(main(2018))
changeRatings<-function(match, ratings){
actPct<-pctGamesWon(match,ratings)#Data frame containing names and pct for each player
print(actPct)
expPct<-calcExpectedPct(as.character(match$winner_name),as.character(match$loser_name),ratings)
print(expPct)
isUpset<-ratings[ratings$nameList==as.character(match$loser_name),2]>ratings[ratings$nameList==as.character(match$winner_name),2]
if(isUpset==TRUE){
expWinName<-as.character(match$loser_name)
}else{
expWinName<-as.character(match$winner_name)
}
print(expWinName)
actPctOfExpWin<-as.numeric(as.character(actPct[actPct$name==expWinName,2]))
print(actPctOfExpWin)
diffInPcts<-as.numeric(actPctOfExpWin-expPct)
changeInRatings<-diffInPcts
print(changeInRatings)
return(c(changeInRatings,isUpset))
}
View(main(2018))
main<-function(startYear, ratings=1){
allMatches<-data.frame()
if(ratings=1){
ratings<-initAllNames(allMatches)
}
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
for(i in 1:nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
if(change[2]){
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]+change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]-change[1]
}else{
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change[1]
}
}
return(ratings)
}
main<-function(startYear, ratings=1){
allMatches<-data.frame()
if(ratings==1){
ratings<-initAllNames(allMatches)
}
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
for(i in 1:nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
if(change[2]){
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]+change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]-change[1]
}else{
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change[1]
}
}
return(ratings)
}
ratings<-main(2018)
main<-function(startYear, ratings=1){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
if(ratings==1){
ratings<-initAllNames(allMatches)
}
for(i in 1:nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
if(change[2]){
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]+change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]-change[1]
}else{
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change[1]
}
}
return(ratings)
}
ratings<-main(2018)
View(ratings)
ratings<-main(2018,ratings)
View(ratings)
ratings<-main(2018,ratings)
View(ratings)
ratings<-main(2018,NA)
main<-function(startYear, ratings){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
if(ratings==NA){
ratings<-initAllNames(allMatches)
}
for(i in 1:nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
if(change[2]){
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]+change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]-change[1]
}else{
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change[1]
}
}
return(ratings)
}
ratings<-main(2018,NA)
ratings<-main(2018,1)
main<-function(startYear, ratings){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
if(ratings==1){
ratings<-initAllNames(allMatches)
}
for(i in 1:nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
if(change[2]){
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]+change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]-change[1]
}else{
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change[1]
}
}
return(ratings)
}
ratings<-main(2018,1)
View(ratings)
ratings<-main(2018,ratings)
View(ratings)
ratings<-main(2018,ratings)
View(ratings)
ratings<-main(2018,ratings)
View(ratings)
ratings<-main(2018,ratings)
View(ratings)
hist(ratings[,2])
for(i in 1:100){}
for(i in 1:100){
ratings<-main(2018,ratings = ratings)
}
hist(ratings[,2])
pctGamesWon<-function(match,ratings){
specScore<-match$score
setScores<-strsplit(as.character(specScore),' ')
gamesPerSet<-lapply(setScores, function(i){
strsplit(i,'-')
})
gameScores<-unlist(gamesPerSet, TRUE)
gameScores<-lapply(gameScores, function(i){
substr(i,1,1)
})
gameScores<-suppressWarnings(as.numeric(gameScores))
gameScores<-na.omit(gameScores)
totalPlayed<-sum(gameScores)
if(totalPlayed==0||is.na(totalPlayed)){
pctWon<-calcExpectedPct(as.character(match$winner_name),as.character(match$loser_name),ratings)
names<-rbind(as.character(match$winner_name),(as.character(match$loser_name)))
if(ratings[ratings$nameList==as.character(match$winner_name),2]>ratings[ratings$nameList==as.character(match$loser_name),2]){
pcts<-rbind(pctWon,1-pctWon)
out<-as.data.frame(cbind(names, pcts))
colnames(out)<-c('name','pct')
return(out)
}else{
pcts<-rbind(1-pctWon,pctWon)
out<-as.data.frame(cbind(names, pcts))
colnames(out)<-c('name','pct')
return(out)
}
}
gameScores<-cbind(gameScores[c(TRUE, FALSE)],gameScores[c(FALSE, TRUE)])
winnerWon<-sum(gameScores[,1])
loserWon<-sum(gameScores[,2])
names<-rbind(as.character(match$winner_name),(as.character(match$loser_name)))
pcts<-rbind((winnerWon/totalPlayed),(loserWon/totalPlayed))
ratingsOfPs<-rbind(ratings[ratings$nameList==as.character(match$winner_name),2],ratings[ratings$nameList==as.character(match$loser_name),2])
out<-as.data.frame(cbind(names, pcts, ratingsOfPs))
colnames(out)<-c('name','pct', 'rating')
return(out)
}
ratings<-main(2018,1)
View(ratings)
ratings<-main(2017,1)
View(ratings)
source('~/pctGamesWon.R')
ratings<-main(2006,1)
View(ratings)
changeRatings<-function(match, ratings){
actPct<-pctGamesWon(match,ratings)#Data frame containing names and pct for each player
expPct<-calcExpectedPct(as.character(match$winner_name),as.character(match$loser_name),ratings)
isUpset<-ratings[ratings$nameList==as.character(match$loser_name),2]>ratings[ratings$nameList==as.character(match$winner_name),2]
if(isUpset==TRUE){
expWinName<-as.character(match$loser_name)
}else{
expWinName<-as.character(match$winner_name)
}
actPctOfExpWin<-as.numeric(as.character(actPct[actPct$name==expWinName,2]))
changeInRatings<-as.numeric(actPctOfExpWin-expPct)
return(c(changeInRatings,isUpset))
}
ratings<-main(2018,1)
dir()
setwd('Desktop/CS5/'IDSP)
setwd('Desktop/CS5/IDSP')
setwd('Desktop')
setwd('CS5')
setwd('IDSP')
setwd('Data Science/IDSP')
dir()
ratings<-read.csv('ratings.csv')
ratings
hist(ratings[,2],ylim=c(0,2000),xlab='Rating',title='Frequency of Ratings across Every Player')
hist(as.numeric(ratings[,2]),ylim=c(0,2000),xlab='Rating',title='Frequency of Ratings across Every Player')
View(ratings)
ratings<-cbind(ratings[,2],ratings[,3])
ratings<-read.csv('ratings.csv')
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',title='Frequency of Ratings across Every Player')
?hist
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players')
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',title='Frequency of Ratings across Every Player',col='green')
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='blue')
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='blue')
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='yellow')
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='brown')
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='black')
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='black',border='white')
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='black',border='white',density = 2)
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='black',border='white',density = 200)
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='black',border='white',density = 20)
hist(as.numeric(ratings[,3]),ylim=c(0,2000),xlab='Rating',main='Frequency of Ratings across All Players',col='black',border='black',density = 20)
main<-function(startYear, ratings){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
if(ratings==1){
ratings<-initAllNames(allMatches)
}
for(i in 1:nrow(allMatches)){
change<-changeRatings(allMatches[i,], ratings)
if(change[2]){
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]+change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]-change[1]
}else{
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change[1]
}
}
return(ratings)
}
initAllNames<-function(matches){
nameList<-unique(c(unique(as.character(matches[,11])), unique(as.character(matches[,21]))))
nameList<-as.data.frame(nameList)
nameList$rating<-rep(2.500, nrow(nameList))
return(nameList)
}
pctGamesWon<-function(match,ratings){
specScore<-match$score
setScores<-strsplit(as.character(specScore),' ')
gamesPerSet<-lapply(setScores, function(i){
strsplit(i,'-')
})
gameScores<-unlist(gamesPerSet, TRUE)
gameScores<-lapply(gameScores, function(i){
substr(i,1,1)
})
gameScores<-suppressWarnings(as.numeric(gameScores))
gameScores<-na.omit(gameScores)
totalPlayed<-sum(gameScores)
if(totalPlayed==0||is.na(totalPlayed)){
pctWon<-calcExpectedPct(as.character(match$winner_name),as.character(match$loser_name),ratings)
names<-rbind(as.character(match$winner_name),(as.character(match$loser_name)))
if(ratings[ratings$nameList==as.character(match$winner_name),2]>ratings[ratings$nameList==as.character(match$loser_name),2]){
pcts<-rbind(pctWon,1-pctWon)
out<-as.data.frame(cbind(names, pcts))
colnames(out)<-c('name','pct')
return(out)
}else{
pcts<-rbind(1-pctWon,pctWon)
out<-as.data.frame(cbind(names, pcts))
colnames(out)<-c('name','pct')
return(out)
}
}
gameScores<-suppressWarnings(cbind(gameScores[c(TRUE, FALSE)],gameScores[c(FALSE, TRUE)]))
winnerWon<-sum(gameScores[,1])
loserWon<-sum(gameScores[,2])
names<-rbind(as.character(match$winner_name),(as.character(match$loser_name)))
pcts<-rbind((winnerWon/totalPlayed),(loserWon/totalPlayed))
ratingsOfPs<-rbind(ratings[ratings$nameList==as.character(match$winner_name),2],ratings[ratings$nameList==as.character(match$loser_name),2])
out<-as.data.frame(cbind(names, pcts, ratingsOfPs))
colnames(out)<-c('name','pct', 'rating')
return(out)
}
changeRatings<-function(match, ratings){
actPct<-pctGamesWon(match,ratings)#Data frame containing names and pct for each player
expPct<-calcExpectedPct(as.character(match$winner_name),as.character(match$loser_name),ratings)
isUpset<-ratings[ratings$nameList==as.character(match$loser_name),2]>ratings[ratings$nameList==as.character(match$winner_name),2]
if(isUpset==TRUE){
expWinName<-as.character(match$loser_name)
}else{
expWinName<-as.character(match$winner_name)
}
actPctOfExpWin<-as.numeric(as.character(actPct[actPct$name==expWinName,2]))
changeInRatings<-as.numeric(actPctOfExpWin-expPct)
return(c(changeInRatings,isUpset))
}
calcExpectedPct<-function(p1,p2,ratings){
diff<-abs(ratings[as.character(ratings$nameList)==p1,2]-ratings[as.character(ratings$nameList)==p2,2])
if(diff>2.5){
return(1)
}
return(.5+(.2*diff))
}
test<-main(2018,1)
main<-function(startYear, ratings){
allMatches<-data.frame()
for(i in startYear:2018){
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',i,'.csv', sep = ''))
allMatches<-rbind(allMatches,matches)
}
if(ratings==1){
ratings<-initAllNames(allMatches)
}
for(i in 1:nrow(allMatches)){
print(i)
change<-changeRatings(allMatches[i,], ratings)
if(change[2]){
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]+change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]-change[1]
}else{
ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$loser_name),2]-change[1]
ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]<-ratings[ratings$nameList==as.character(allMatches[i,]$winner_name),2]+change[1]
}
}
return(ratings)
}
test<-main(2018,1)
matches<-read.csv(paste('https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_matches_',2018,'.csv', sep = ''))
View(matches)
changeRatings(matches[1,])
changeRatings(matches[1,],initAllNames(matches))
changeRatings(matches[2,],initAllNames(matches))
initAllNames<-function(matches){
nameList<-unique(c(unique(as.character(matches$winner_name)), unique(as.character(matches$loser_name))))
nameList<-as.data.frame(nameList)
nameList$rating<-rep(2.500, nrow(nameList))
return(nameList)
}
changeRatings(matches[2,],initAllNames(matches))
test<-main(2018,1)
View(test)
?unlist
